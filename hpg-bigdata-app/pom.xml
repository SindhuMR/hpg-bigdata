<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2015 OpenCB
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.opencb.hpg-bigdata</groupId>
        <artifactId>hpg-bigdata</artifactId>
        <version>1.0.0-beta-nvm</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>hpg-bigdata-app</artifactId>
    <version>${hpg.version}</version>

    <properties>
        <build.dir>${project.basedir}/../build</build.dir>
        <app.dir>${project.basedir}/app</app.dir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.opencb.hpg-bigdata</groupId>
            <artifactId>hpg-bigdata-tools</artifactId>
        </dependency>

        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
            <version>1.48</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>9.3.6.v20151106</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>9.3.6.v20151106</version>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-jersey2-jaxrs</artifactId>
            <version>1.5.9</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-annotations</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>jersey-container-servlet-core</artifactId>
                    <groupId>org.glassfish.jersey.containers</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jersey-server</artifactId>
                    <groupId>org.glassfish.jersey.core</groupId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src/main/java</sourceDirectory>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>${project.basedir}/app/bin</directory>
                <filtering>true</filtering>
                <targetPath>${project.basedir}/target/bin</targetPath>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>appassembler-maven-plugin</artifactId>
                <version>1.10</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>assemble</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <repositoryName>libs</repositoryName>
                    <repositoryLayout>flat</repositoryLayout>
                    <useWildcardClassPath>true</useWildcardClassPath>
                    <!--By default, "etc".-->
                    <configurationDirectory>conf</configurationDirectory>
                    <!--Do we need to include the configuration folder in the classpath?-->
                    <includeConfigurationDirectoryInClasspath>false</includeConfigurationDirectoryInClasspath>
                    <extraJvmArguments>-Xms256m -Xmx2048m</extraJvmArguments>
                    <programs>
                        <program>
                            <name>hpg-bigdata-local2.sh</name>
                            <mainClass>org.opencb.hpg.bigdata.app.BigDataLocalMain</mainClass>
                            <platforms>
                                <platform>unix</platform>
                            </platforms>
                        </program>
                    </programs>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>clean-libs</id>
                        <phase>clean</phase>
                        <configuration>
                            <target>
                                <echo>Preparing ${build.dir} folder</echo>
                                <exec executable="rm">
                                    <arg value="-rf"/>
                                    <arg value="${build.dir}"/>
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>install-app</id>
                        <phase>install</phase>
                        <configuration>
                            <target>
                                <echo>Preparing ${build.dir} folder</echo>
                                <exec executable="rm">
                                    <arg value="-rf"/>
                                    <arg value="${build.dir}"/>
                                </exec>
                                <exec executable="mkdir">
                                    <arg value="${build.dir}"/>
                                </exec>

                                <echo>Copying app files</echo>
                                <exec executable="cp">
                                    <arg value="-r"/>
                                    <!--<arg value="${project.basedir}/target/bin"/>-->
                                    <arg value="${app.dir}/bin"/>
                                    <arg value="${project.basedir}/app/data"/>
                                    <arg value="${project.basedir}/app/examples"/>
                                    <arg value="${project.basedir}/app/libs"/>
                                    <arg value="${project.basedir}/../README.md"/>
                                    <arg value="${project.basedir}/../LICENSE"/>
                                    <arg value="${build.dir}"/>
                                </exec>

                                <echo>Setting execution permissions to shell scripts</echo>
                                <exec executable="chmod">
                                    <arg value="+x"/>
                                    <arg value="${build.dir}/bin/hpg-bigdata.sh"/>
                                    <arg value="${build.dir}/bin/hpg-bigdata-local.sh"/>
                                </exec>

                                <!--<echo>Building native code</echo>-->
                                <!--<exec executable="../hpg-bigdata-core/native/build.sh">-->
                                <!--</exec>-->

                                <echo>Copying to ${build.dir}</echo>
                                <exec executable="cp">
                                    <arg value="-r"/>
                                    <!--<arg value="${app.dir}/bin"/>-->
                                    <arg value="${project.basedir}/target/appassembler/bin"/>
                                    <arg value="${project.basedir}/target/appassembler/libs"/>
                                    <arg value="${project.basedir}/target/hpg-bigdata-app-${hpg.version}-jar-with-dependencies.jar"/>
                                    <arg value="${build.dir}"/>
                                </exec>

                                <echo>Copying to ${build.dir}</echo>
                                <exec executable="cp">
                                    <arg value="-r"/>
                                    <arg value="${project.basedir}/../hpg-bigdata-core/native/libhpgbigdata.so"/>
                                    <arg value="${project.basedir}/../hpg-bigdata-core/native/libhpgbigdata.dylib"/>
                                    <arg value="${project.basedir}/../hpg-bigdata-core/native/third-party/htslib/libhts.so"/>
                                    <arg value="${project.basedir}/../hpg-bigdata-core/native/third-party/htslib/libhts.so.1"/>
                                    <arg value="${project.basedir}/../hpg-bigdata-core/native/third-party/htslib/libhts.dylib"/>
                                    <arg value="${project.basedir}/../hpg-bigdata-core/native/third-party/htslib/libhts.1.dylib"/>
                                    <arg value="${project.basedir}/../hpg-bigdata-core/native/third-party/avro-c-1.7.7/build/src/libavro.so"/>
                                    <arg value="${project.basedir}/../hpg-bigdata-core/native/third-party/avro-c-1.7.7/build/src/libavro.so.22.0.0"/>
                                    <arg value="${project.basedir}/../hpg-bigdata-core/native/third-party/avro-c-1.7.7/build/src/libavro.dylib"/>
                                    <arg value="${project.basedir}/../hpg-bigdata-core/native/third-party/avro-c-1.7.7/build/src/libavro.22.0.0.dylib"/>
                                    <arg value="${build.dir}/libs"/>
                                </exec>

                                <echo>Uncompressing avro lib</echo>
                                <exec executable="tar">
                                    <arg value="zxvf"/>
                                    <arg value="${build.dir}/libs/avro-1.7.7.tgz"/>
                                    <arg value="-C"/>
                                    <arg value="${build.dir}/libs"/>
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>build-multi-jar</id>
            <activation>
                <activeByDefault>
                    false
                </activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>org.opencb.hpg.bigdata.app.BigDataMain</mainClass>
                                </manifest>
                            </archive>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>