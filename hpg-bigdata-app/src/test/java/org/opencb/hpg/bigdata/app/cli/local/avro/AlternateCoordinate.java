/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.opencb.hpg.bigdata.app.cli.local.avro;
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AlternateCoordinate {
   private String chromosome;
  /** * First position 1-based of the alternate. If null, the start is the same of the variant. */
   private Integer start;
  /** * End position 1-based of the alternate. If null, the end is the same of the variant. */
   private Integer end;
  /** * Reference allele. If null, the reference is the same of the variant. */
   private String reference;
  /** * Alternate allele. */
   private String alternate;
   private String type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AlternateCoordinate() {}

  /**
   * All-args constructor.
   */
  public AlternateCoordinate(String chromosome, Integer start, Integer end, String reference, String alternate, String type) {
    this.chromosome = chromosome;
    this.start = start;
    this.end = end;
    this.reference = reference;
    this.alternate = alternate;
    this.type = type;
  }

  /**
   * Gets the value of the 'chromosome' field.
   */
  public String getChromosome() {
    return chromosome;
  }

  /**
   * Sets the value of the 'chromosome' field.
   * @param value the value to set.
   */
  public void setChromosome(String value) {
    this.chromosome = value;
  }

  /**
   * Gets the value of the 'start' field.
   * * First position 1-based of the alternate. If null, the start is the same of the variant.   */
  public Integer getStart() {
    return start;
  }

  /**
   * Sets the value of the 'start' field.
   * * First position 1-based of the alternate. If null, the start is the same of the variant.   * @param value the value to set.
   */
  public void setStart(Integer value) {
    this.start = value;
  }

  /**
   * Gets the value of the 'end' field.
   * * End position 1-based of the alternate. If null, the end is the same of the variant.   */
  public Integer getEnd() {
    return end;
  }

  /**
   * Sets the value of the 'end' field.
   * * End position 1-based of the alternate. If null, the end is the same of the variant.   * @param value the value to set.
   */
  public void setEnd(Integer value) {
    this.end = value;
  }

  /**
   * Gets the value of the 'reference' field.
   * * Reference allele. If null, the reference is the same of the variant.   */
  public String getReference() {
    return reference;
  }

  /**
   * Sets the value of the 'reference' field.
   * * Reference allele. If null, the reference is the same of the variant.   * @param value the value to set.
   */
  public void setReference(String value) {
    this.reference = value;
  }

  /**
   * Gets the value of the 'alternate' field.
   * * Alternate allele.   */
  public String getAlternate() {
    return alternate;
  }

  /**
   * Sets the value of the 'alternate' field.
   * * Alternate allele.   * @param value the value to set.
   */
  public void setAlternate(String value) {
    this.alternate = value;
  }

  /**
   * Gets the value of the 'type' field.
   */
  public String getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(String value) {
    this.type = value;
  }
}
